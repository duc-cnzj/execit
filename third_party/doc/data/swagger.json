{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "execit api docs",
    "version": "version not set"
  },
  "paths": {
    "/api/all_cards": {
      "get": {
        "tags": [
          "CardSvc"
        ],
        "operationId": "CardSvc_All",
        "parameters": [
          {
            "type": "boolean",
            "name": "owned",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cardAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/auth/exchange": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Exchange sso code 换取 token",
        "operationId": "Auth_Exchange",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authExchangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authExchangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/auth/info": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Info 获取当前登录的用户信息",
        "operationId": "Auth_Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "Login 登录接口",
        "operationId": "Auth_Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/auth/settings": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Settings 获取 sso 配置以及跳转 url",
        "operationId": "Auth_Settings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/cards": {
      "post": {
        "tags": [
          "CardSvc"
        ],
        "operationId": "CardSvc_Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cardCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cardCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/cards/{card_id}": {
      "get": {
        "tags": [
          "CardSvc"
        ],
        "operationId": "CardSvc_Show",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "card_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cardShowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CardSvc"
        ],
        "operationId": "CardSvc_Delete",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "card_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cardDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/cards/{card_id}/all_containers": {
      "get": {
        "tags": [
          "CardSvc"
        ],
        "operationId": "CardSvc_AllContainers",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "card_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cardAllContainersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/clusters": {
      "get": {
        "tags": [
          "ClusterSvc"
        ],
        "operationId": "ClusterSvc_List",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clusterListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ClusterSvc"
        ],
        "operationId": "ClusterSvc_Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clusterCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/clusters/{cluster_id}": {
      "get": {
        "tags": [
          "ClusterSvc"
        ],
        "operationId": "ClusterSvc_Show",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clusterShowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClusterSvc"
        ],
        "operationId": "ClusterSvc_Delete",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "cluster_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clusterDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/cards/{card_id}/clusters/{cluster_id}/namespaces/{namespace}/pods/{pod}/containers/{container}/logs": {
      "get": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "ContainerLog 查看 pod 日志",
        "operationId": "ContainerSvc_ContainerLog",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "card_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "container",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/containerLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/cards/{card_id}/clusters/{cluster_id}/namespaces/{namespace}/pods/{pod}/containers/{container}/stream_logs": {
      "get": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "StreamContainerLog stream 方式查看 pod 日志",
        "operationId": "ContainerSvc_StreamContainerLog",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "card_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "container",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of containerLogResponse",
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/containerLogResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/clusters/{cluster_id}/namespaces/{namespace}/pods/{pod}/proxy/{rest}": {
      "get": {
        "tags": [
          "ProxySvc"
        ],
        "operationId": "ProxySvc_PodProxy",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          },
          {
            "pattern": ".[^/]+",
            "type": "string",
            "name": "rest",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "card_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "port",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proxyPodProxyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/copy_to_pod": {
      "post": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "CopyToPod (web): 页面上传文件到 pod 内部",
        "operationId": "ContainerSvc_CopyToPod",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/containerCopyToPodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/containerCopyToPodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/pod_exists": {
      "post": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "IsPodExists pod 是否存在",
        "operationId": "ContainerSvc_IsPodExists",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/containerIsPodExistsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/containerIsPodExistsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/pod_running_status": {
      "post": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "IsPodRunning pod 是否正常在跑",
        "operationId": "ContainerSvc_IsPodRunning",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/containerIsPodRunningRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/containerIsPodRunningResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/proxies": {
      "post": {
        "tags": [
          "ContainerSvc"
        ],
        "operationId": "ContainerSvc_Proxy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/containerProxyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/containerProxyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "List 用户操作事件列表",
        "operationId": "Event_List",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": [
              "Unknown",
              "Create",
              "Update",
              "Delete",
              "Upload",
              "Download",
              "Shell"
            ],
            "type": "string",
            "default": "Unknown",
            "name": "action_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "模糊搜索 message 和 username",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/files": {
      "get": {
        "tags": [
          "FileSvc"
        ],
        "summary": "文件列表",
        "operationId": "FileSvc_List",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "without_deleted",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fileListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/files/delete_undocumented_files": {
      "delete": {
        "tags": [
          "FileSvc"
        ],
        "summary": "DeleteUndocumentedFiles 删除未被记录的文件，model 表中没有，但是文件目录中有",
        "operationId": "FileSvc_DeleteUndocumentedFiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fileDeleteUndocumentedFilesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/files/disk_info": {
      "get": {
        "tags": [
          "FileSvc"
        ],
        "summary": "DiskInfo 查看上传文件目录大小",
        "operationId": "FileSvc_DiskInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fileDiskInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/files/{id}": {
      "delete": {
        "tags": [
          "FileSvc"
        ],
        "summary": "删除文件",
        "operationId": "FileSvc_Delete",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fileDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/metrics/clusters/{cluster_id}/namespace/{namespace}/pods/{pod}": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "TopPod 获取 pod 的 cpu memory 信息",
        "operationId": "Metrics_TopPod",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/metricsTopPodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/metrics/clusters/{cluster_id}/namespace/{namespace}/pods/{pod}/stream": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "StreamTopPod stream 的方式获取 pod 的 cpu memory 信息",
        "operationId": "Metrics_StreamTopPod",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of metricsTopPodResponse",
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/metricsTopPodResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/picture/background": {
      "get": {
        "security": [],
        "tags": [
          "Picture"
        ],
        "summary": "Background 获取背景图片",
        "operationId": "Picture_Background",
        "parameters": [
          {
            "type": "boolean",
            "name": "random",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pictureBackgroundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/rbac/permissions": {
      "get": {
        "tags": [
          "RBAC"
        ],
        "operationId": "RBAC_List",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": [
              "_",
              "Request",
              "Approved",
              "Rejected",
              "Revoked"
            ],
            "type": "string",
            "default": "_",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "name": "email",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rbacListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RBAC"
        ],
        "operationId": "RBAC_ApplyFor",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rbacApplyForRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rbacApplyForResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/rbac/permissions/approve": {
      "post": {
        "tags": [
          "RBAC"
        ],
        "operationId": "RBAC_Approve",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rbacApproveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rbacApproveResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/rbac/permissions/not_approved_reason": {
      "post": {
        "tags": [
          "RBAC"
        ],
        "operationId": "RBAC_NotApprovedReason",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rbacNotApprovedReasonRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rbacNotApprovedReasonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/rbac/permissions/reject": {
      "post": {
        "tags": [
          "RBAC"
        ],
        "operationId": "RBAC_Reject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rbacRejectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rbacRejectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/rbac/permissions/revoke": {
      "post": {
        "tags": [
          "RBAC"
        ],
        "operationId": "RBAC_Revoke",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rbacRevokeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rbacRevokeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/record_files/{id}": {
      "get": {
        "tags": [
          "FileSvc"
        ],
        "summary": "records 文件信息",
        "operationId": "FileSvc_ShowRecords",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fileShowRecordsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/version": {
      "get": {
        "security": [],
        "tags": [
          "Version"
        ],
        "summary": "Version 获取当前版本信息",
        "operationId": "Version_Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SettingsResponseOidcSetting": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "end_session_endpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "authExchangeRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "authExchangeResponse": {
      "type": "object",
      "properties": {
        "expires_in": {
          "type": "string",
          "format": "int64"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "authInfoResponse": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean"
        },
        "logout_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/authPermission"
          }
        }
      }
    },
    "authLoginRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "authLoginResponse": {
      "type": "object",
      "properties": {
        "expires_in": {
          "type": "string",
          "format": "int64"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "authPermission": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "permission": {
          "$ref": "#/definitions/rbacPermission"
        }
      }
    },
    "authSettingsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SettingsResponseOidcSetting"
          }
        }
      }
    },
    "cardAllContainersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/containerItem"
          }
        }
      }
    },
    "cardAllResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cardItemsList"
          }
        }
      }
    },
    "cardCreateRequest": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "cardCreateResponse": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "cardDeleteResponse": {
      "type": "object"
    },
    "cardItems": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "cluster_name": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/containerItem"
          }
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "cardItemsList": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "cluster_name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cardItems"
          }
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "cardShowResponse": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/containerItem"
          }
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "clusterCreateRequest": {
      "type": "object",
      "properties": {
        "kube_config": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "clusterCreateResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "clusterDeleteResponse": {
      "type": "object"
    },
    "clusterItem": {
      "type": "object",
      "properties": {
        "card_id": {
          "type": "string",
          "format": "int64"
        },
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "clusterItems": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterItem"
          }
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "clusterListResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelClusterModel"
          }
        },
        "page": {
          "type": "string",
          "format": "int64"
        },
        "page_size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "clusterShowResponse": {
      "type": "object",
      "properties": {
        "api_server_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterItems"
          }
        },
        "kube_config": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "containerCopyToPodRequest": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "container": {
          "type": "string"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "namespace": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        }
      }
    },
    "containerCopyToPodResponse": {
      "type": "object",
      "properties": {
        "file_name": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "pod_file_path": {
          "type": "string"
        }
      }
    },
    "containerExecResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "containerIsPodExistsRequest": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "namespace": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        }
      }
    },
    "containerIsPodExistsResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        }
      }
    },
    "containerIsPodRunningRequest": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "namespace": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        }
      }
    },
    "containerIsPodRunningResponse": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "running": {
          "type": "boolean"
        }
      }
    },
    "containerItem": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "container": {
          "type": "string"
        },
        "created_at": {
          "$ref": "#/definitions/googleapiTimestamp"
        },
        "is_new": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        },
        "proxies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/containerProxyInfo"
          }
        },
        "terminating": {
          "type": "boolean"
        }
      }
    },
    "containerLogResponse": {
      "type": "object",
      "properties": {
        "container_name": {
          "type": "string"
        },
        "log": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "pod_name": {
          "type": "string"
        }
      }
    },
    "containerProxyInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "containerProxyRequest": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string",
          "format": "int64"
        },
        "namespace": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        },
        "port": {
          "type": "string"
        }
      }
    },
    "containerProxyResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "containerStreamCopyToPodResponse": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        },
        "pod_file_path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "eventActionType": {
      "type": "string",
      "default": "Unknown",
      "enum": [
        "Unknown",
        "Create",
        "Update",
        "Delete",
        "Upload",
        "Download",
        "Shell"
      ]
    },
    "eventListItem": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/eventActionType"
        },
        "duration": {
          "type": "string"
        },
        "event_at": {
          "type": "string"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "humanize_size": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "new": {
          "type": "string"
        },
        "old": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "eventListResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/eventListItem"
          }
        },
        "page": {
          "type": "string",
          "format": "int64"
        },
        "page_size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "fileDeleteResponse": {
      "type": "object",
      "properties": {
        "file": {
          "$ref": "#/definitions/fileFile"
        }
      }
    },
    "fileDeleteUndocumentedFilesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fileFile"
          }
        }
      }
    },
    "fileDiskInfoResponse": {
      "type": "object",
      "properties": {
        "humanize_usage": {
          "type": "string"
        },
        "usage": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "fileFile": {
      "type": "object",
      "properties": {
        "humanize_size": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "upload_by": {
          "type": "string"
        }
      }
    },
    "fileListResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelFileModel"
          }
        },
        "page": {
          "type": "string",
          "format": "int64"
        },
        "page_size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "fileShowRecordsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "googleapiTimestamp": {
      "description": "A Timestamp represents a point in time independent of any time zone or local\ncalendar, encoded as a count of seconds and fractions of seconds at\nnanosecond resolution. The count is relative to an epoch at UTC midnight on\nJanuary 1, 1970, in the proleptic Gregorian calendar which extends the\nGregorian calendar backwards to year one.\n\nAll minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\nsecond table is needed for interpretation, using a [24-hour linear\nsmear](https://developers.google.com/time/smear).\n\nThe range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\nrestricting to that range, we ensure that we can convert to and from [RFC\n3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n\n# Examples\n\nExample 1: Compute Timestamp from POSIX `time()`.\n\n    Timestamp timestamp;\n    timestamp.set_seconds(time(NULL));\n    timestamp.set_nanos(0);\n\nExample 2: Compute Timestamp from POSIX `gettimeofday()`.\n\n    struct timeval tv;\n    gettimeofday(\u0026tv, NULL);\n\n    Timestamp timestamp;\n    timestamp.set_seconds(tv.tv_sec);\n    timestamp.set_nanos(tv.tv_usec * 1000);\n\nExample 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n\n    FILETIME ft;\n    GetSystemTimeAsFileTime(\u0026ft);\n    UINT64 ticks = (((UINT64)ft.dwHighDateTime) \u003c\u003c 32) | ft.dwLowDateTime;\n\n    // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n    // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n    Timestamp timestamp;\n    timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n    timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n\nExample 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n\n    long millis = System.currentTimeMillis();\n\n    Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n        .setNanos((int) ((millis % 1000) * 1000000)).build();\n\nExample 5: Compute Timestamp from Java `Instant.now()`.\n\n    Instant now = Instant.now();\n\n    Timestamp timestamp =\n        Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n            .setNanos(now.getNano()).build();\n\nExample 6: Compute Timestamp from current time in Python.\n\n    timestamp = Timestamp()\n    timestamp.GetCurrentTime()\n\n# JSON Mapping\n\nIn JSON format, the Timestamp type is encoded as a string in the\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\nformat is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\nwhere {year} is always expressed using four digits while {month}, {day},\n{hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\nseconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\nare optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\nis required. A proto3 JSON serializer should always use UTC (as indicated by\n\"Z\") when printing the Timestamp type and a proto3 JSON parser should be\nable to accept both UTC and other timezones (as indicated by an offset).\n\nFor example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n01:30 UTC on January 15, 2017.\n\nIn JavaScript, one can convert a Date object to this format using the\nstandard\n[toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\nmethod. In Python, a standard `datetime.datetime` object can be converted\nto this format using\n[`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\nthe time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\nthe Joda Time's [`ISODateTimeFormat.dateTime()`](\nhttp://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D\n) to obtain a formatter capable of generating timestamps in this format.",
      "type": "object",
      "properties": {
        "nanos": {
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "metricsTopPodResponse": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double"
        },
        "humanize_cpu": {
          "type": "string"
        },
        "humanize_memory": {
          "type": "string"
        },
        "length": {
          "type": "string",
          "format": "int64"
        },
        "memory": {
          "type": "number",
          "format": "double"
        },
        "time": {
          "type": "string"
        }
      }
    },
    "modelClusterModel": {
      "type": "object",
      "properties": {
        "api_server_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "kube_config": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "modelFileModel": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "container_path": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "is_deleted": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "updated_at": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "pictureBackgroundResponse": {
      "type": "object",
      "properties": {
        "copyright": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "proxyPodProxyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "rbacApplyForRequest": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/rbacPermission"
        },
        "subject_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "rbacApplyForResponse": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/rbacUserPermission"
        }
      }
    },
    "rbacApproveRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "rbacApproveResponse": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/rbacUserPermission"
        }
      }
    },
    "rbacListResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rbacUserPermission"
          }
        },
        "page": {
          "type": "string",
          "format": "int64"
        },
        "page_size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "rbacNotApprovedReasonRequest": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/rbacPermission"
        },
        "subject_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "rbacNotApprovedReasonResponse": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        }
      }
    },
    "rbacPermission": {
      "type": "string",
      "default": "None",
      "enum": [
        "None",
        "Card",
        "ClusterAdd",
        "ClusterDelete",
        "ClusterView",
        "FileUpload",
        "FileDelete",
        "FileDownload",
        "EventView"
      ]
    },
    "rbacRejectRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "rbacRejectResponse": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/rbacUserPermission"
        }
      }
    },
    "rbacRevokeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "rbacRevokeResponse": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/rbacUserPermission"
        }
      }
    },
    "rbacState": {
      "type": "string",
      "default": "_",
      "enum": [
        "_",
        "Request",
        "Approved",
        "Rejected",
        "Revoked"
      ]
    },
    "rbacUserPermission": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "permission": {
          "$ref": "#/definitions/rbacPermission"
        },
        "reason": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/rbacState"
        },
        "subject_id": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "versionResponse": {
      "type": "object",
      "properties": {
        "build_date": {
          "type": "string"
        },
        "compiler": {
          "type": "string"
        },
        "git_branch": {
          "type": "string"
        },
        "git_commit": {
          "type": "string"
        },
        "git_repo": {
          "type": "string"
        },
        "git_tag": {
          "type": "string"
        },
        "go_version": {
          "type": "string"
        },
        "kubectl_version": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "tags": [
    {
      "name": "Auth"
    },
    {
      "name": "CardSvc"
    },
    {
      "name": "ClusterSvc"
    },
    {
      "name": "ContainerSvc"
    },
    {
      "name": "Event"
    },
    {
      "name": "FileSvc"
    },
    {
      "name": "Metrics"
    },
    {
      "name": "Picture"
    },
    {
      "name": "ProxySvc"
    },
    {
      "name": "RBAC"
    },
    {
      "name": "Version"
    }
  ]
}
