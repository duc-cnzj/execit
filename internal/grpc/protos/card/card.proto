syntax = "proto3";

package card;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "container/container.proto";

option go_package = "github.com/duc-cnzj/execit-client/card;card";

message AllRequest {}
message AllResponse {
  repeated ItemsList items = 1;
}

message ListRequest {
  int64 page = 1 [(validate.rules).int64.gt = 0];
  int64 page_size = 2 [(validate.rules).int64.gt = 0];
}

message Items {
  int64 id = 1;
  int64 cluster_id = 2;
  string namespace = 3;
  string name = 4;
  string type = 5;
  string cluster_name = 6;
  repeated container.Item items = 7;
}

message ItemsList {
  int64 cluster_id = 1;
  string namespace = 2;
  string cluster_name = 3;
  repeated Items items = 4;
}

message ListResponse {
  int64 page = 1;
  int64 page_size = 2;
  int64 count = 3;
  repeated Items items = 4;
}

message CreateRequest {
  int64 cluster_id = 1 [(validate.rules).int64.gt = 0];
  string namespace = 2 [(validate.rules).string.min_bytes = 1];
  string name = 3 [(validate.rules).string.min_bytes = 1];
  string type = 4 [(validate.rules).string.min_bytes = 1];
}
message CreateResponse {
  int64 id = 1;
  string type = 2;
  string namespace = 3;
  string name = 4;
  int64 cluster_id = 6;
  string created_at = 7;
  string updated_at = 8;
  string deleted_at = 9;
}

message ShowRequest {
  int64 card_id = 1 [(validate.rules).int64.gt = 0];
}
message ShowResponse {
  int64 id = 1;
  string type = 2;
  string namespace = 3;
  string name = 4;
  int64 cluster_id = 6;
  string created_at = 7;
  string updated_at = 8;
  string deleted_at = 9;

  repeated container.Item items = 10;
}

message DeleteRequest {
  int64 card_id = 1 [(validate.rules).int64.gt = 0];
}
message DeleteResponse {}

service CardSvc {
  rpc All(AllRequest) returns (AllResponse) {
    option (google.api.http) = {
      get: "/api/all_cards"
    };
  }

  //  rpc List(ListRequest) returns (ListResponse) {
  //    option (google.api.http) = {
  //      get: "/api/cards"
  //    };
  //  }

  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/api/cards",
      body: "*"
    };
  }

  rpc Show(ShowRequest) returns (ShowResponse) {
    option (google.api.http) = {
      get: "/api/cards/{card_id}"
    };
  }

  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
      delete: "/api/cards/{card_id}"
    };
  }

  rpc AllContainers(AllContainersRequest) returns (AllContainersResponse) {
    option (google.api.http) = {
      get: "/api/cards/{card_id}/all_containers"
    };
  }
}

message AllContainersRequest {
  int64 card_id = 1;
}

message AllContainersResponse {
  repeated container.Item items = 1;
}